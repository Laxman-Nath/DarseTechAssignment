package com.bms.swagger;

import java.util.Arrays;

import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.Operation;
import io.swagger.v3.oas.models.PathItem;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.parameters.Parameter;
import jakarta.servlet.ServletContextEvent;
import jakarta.servlet.ServletContextListener;
import jakarta.servlet.annotation.WebListener;

@WebListener
public class OpenApiContextListener implements ServletContextListener {
	@Override
	public void contextInitialized(ServletContextEvent sce) {
		OpenAPI openAPI = new OpenAPI()
				.info(new Info().title("Book API").description("API for managing books").version("1.0.0"));

		openAPI.path("/addBook",
			    new PathItem()
			        .post(new Operation()
			            .summary("Add book to database")
			            .description("This endpoint will store the book in the database.")
			            .requestBody(new io.swagger.v3.oas.models.parameters.RequestBody()
			                .description("The book to add")
			                .required(true)
			                .content(new io.swagger.v3.oas.models.media.MediaType()
			                    .schema(new io.swagger.v3.oas.models.media.ObjectSchema()
			                        .addProperty("name", new io.swagger.v3.oas.models.media.StringSchema().description("Name of the book"))
			                        .addProperty("isbn", new io.swagger.v3.oas.models.media.StringSchema().description("ISBN of the book"))

			                        .required(Arrays.asList("name", "isbn"))))) 
			        .get(new Operation()
			            .summary("Show form for adding book")
			            .description("This endpoint displays a form for adding a new book.")));


		openAPI.path("/deleteBook", new PathItem().get(new Operation().summary("delete book from database")
				.description("This endpoint display form will delete book from database .")));
		openAPI.path("/editBook",
				new PathItem()
						.post(new Operation().summary("edit book in database")
								.description("This endpoint will edit book in datbase."))
						.get(new Operation().summary("show form for editing book")
								.description("This endpoint display form for editing book .")));

		openAPI.path("/viewBooks", new PathItem().get(new Operation().summary("show all book from database")
				.description("This endpoint will display all book from database .")));
		sce.getServletContext().setAttribute("openAPI", openAPI);
	}

	@Override
	public void contextDestroyed(ServletContextEvent sce) {

	}
}
